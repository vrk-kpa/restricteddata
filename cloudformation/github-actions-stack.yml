---
AWSTemplateFormatVersion: "2010-09-09"
Description: Creates OIDC provider and IAM role for GitHub actions workflows.

#
# https://github.com/aws-actions/configure-aws-credentials#assuming-a-role
#

Parameters:
  GitHubOrg:
    Description: Name of GitHub organization/user (case sensitive)
    Type: String
  RepositoryName:
    Description: Name of GitHub repository (case sensitive)
    Type: String
  OIDCProviderArn:
    Description: Arn for the GitHub OIDC Provider. (optional)
    Default: ""
    Type: String
  OIDCAudience:
    Description: Audience supplied to configure-aws-credentials.
    Default: "sts.amazonaws.com"
    Type: String
  ECRRepositoryArn:
    Description: Arn for the ECR repositories.
    Type: String
  CreateBuildRole:
    Description: Is the build role required for this aws account
    Type: String
    Default: false
    AllowedValues: [true, false]
  CreateDiffRole:
    Description: Is the diff role required for this aws account
    Type: String
    Default: false
    AllowedValues: [ true, false ]


Conditions:
  CreateOIDCProvider: !Equals
    - !Ref OIDCProviderArn
    - ""
  ShouldCreateBuildRole: !Equals ['true', !Ref CreateBuildRole]
  ShouldCreateDiffRole: !Equals [ 'true', !Ref CreateDiffRole ]


Resources:
  Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: !Ref OIDCAudience
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*
      Policies:
        - PolicyName: ecr-login
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "ecr:GetAuthorizationToken"
                Resource: "*"
        - PolicyName: cfn-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "cloudformation:*"
                Resource: "*"
        - PolicyName: sts-cdk-assume-permission
          PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action: "sts:AssumeRole"
                  Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/cdk-*"

  DiffRole:
    Type: AWS::IAM::Role
    Condition: ShouldCreateDiffRole
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: !Ref OIDCAudience
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*
      Policies:
        - PolicyName: cfn-access
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "cloudformation:*"
                Resource: "*"
        - PolicyName: sts-cdk-assume-permission
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "sts:AssumeRole"
                Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/cdk-*"

  BuildRole:
    Type: AWS::IAM::Role
    Condition: ShouldCreateBuildRole
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !If
                - CreateOIDCProvider
                - !Ref GithubOidc
                - !Ref OIDCProviderArn
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: !Ref OIDCAudience
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GitHubOrg}/${RepositoryName}:*
      Policies:
        - PolicyName: ecr-login
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: "ecr:GetAuthorizationToken"
                Resource: "*"

        - PolicyName: ecr-push-pull
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "ecr:BatchGetImage"
                  - "ecr:BatchCheckLayerAvailability"
                  - "ecr:CompleteLayerUpload"
                  - "ecr:GetDownloadUrlForLayer"
                  - "ecr:InitiateLayerUpload"
                  - "ecr:PutImage"
                  - "ecr:UploadLayerPart"
                Resource: !Ref ECRRepositoryArn


  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Condition: CreateOIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
      ThumbprintList:
        - ffffffffffffffffffffffffffffffffffffffff

Outputs:
  Role:
    Value: !GetAtt Role.Arn
  BuildRole:
    Condition: ShouldCreateBuildRole
    Value: !GetAtt BuildRole.Arn
  DiffRole:
    Condition: ShouldCreateDiffRole
    Value: !GetAtt DiffRole.Arn
